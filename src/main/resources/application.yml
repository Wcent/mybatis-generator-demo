server:
  port: 8080

spring:
  datasource:
    name: mytest
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${db-url}
    username: ${db-user}
    password: ${db-password}

#spring:
#  datasource:
#    name: mytest
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/mytest?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
#    username: root
#    password: 123456
#    # 数据源其他配置
#    # 数据源类型（可整合druid配置数据源监控）
#    type: com.alibaba.druid.pool.DruidDataSource
#    # 连接初始值，连接池启动时创建的连接数量的初始值
#    initialSize: 5
#    # 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
#    minIdle: 5
#    # 连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制
#    maxActive: 20
#    # 最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制
#    maxWait: 60000
#    # 有两个含义： 1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
#    timeBetweenEvictionRunsMillis: 60000
#    # 连接保持空闲而不被驱逐的最长时间
#    minEvictableIdleTimeMillis: 300000
#    # 增加对连接池中连接的测试/验证，防止数据库认为连接已死而Web应用服务器认为连接还有效的问题
#    # MYSQL : SELECT 1
#    # ORACLE: SELECT 1 FROM DUAL
#    # Microsoft SQL: SELECT 1
#    validationQuery: SELECT 1 FROM DUAL
#    # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
#    testWhileIdle: true
#    # 借出连接时不要测试，否则很影响性能
#    testOnBorrow: false
#    # 返回
#    testOnReturn: false
#    # 是否对已备语句进行池管理（布尔值），是否对PreparedStatement进行缓存
#    poolPreparedStatements: true
#    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#    filters: stat,wall,log4j
#    # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
#    # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
#    maxPoolPreparedStatementPerConnectionSize: 20
#    # 配置支持配置公用监控数据
#    useGlobalDataSourceStat: true
#    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

mybatis:
  mapper-locations:
    - classpath:mapper/**/*.xml
  type-aliases-package: org.cent.demo.domain